{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek.vats/Documents/Projects Git/Projects/docintel-ai copy 2/frontend/src/components/DocumentUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { toast } from 'react-toastify';\nimport apiService from '../services/api';\nimport { jsxDEV as _jsxDEV, Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst DocumentUpload = ({\n  onUploadComplete,\n  onError,\n  setLoading\n}) => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const onDrop = async acceptedFiles => {\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles[0];\n\n    // Validate file type\n    const validTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'text/plain'];\n    if (!validTypes.includes(file.type)) {\n      toast.error('Please upload a valid file (PDF, DOC, DOCX, or TXT)');\n      return;\n    }\n    setUploading(true);\n    setLoading(true);\n    try {\n      const result = await apiService.uploadDocument(file);\n      console.log('Upload result:', result);\n      if (result && result.results) {\n        const toastId = toast.success('Document uploaded and analyzed successfully!', {\n          autoClose: false\n        });\n        onUploadComplete(result.results, toastId);\n      } else {\n        throw new Error('Invalid response format from server');\n      }\n    } catch (error) {\n      console.error('Upload error:', error);\n      toast.error(error.message || 'Failed to upload document. Please try again.');\n      onError(error);\n    } finally {\n      setUploading(false);\n      setLoading(false);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'application/msword': ['.doc'],\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'],\n      'text/plain': ['.txt']\n    },\n    multiple: false,\n    disabled: uploading\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-2xl mx-auto p-6\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: `border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors\n                    ${isDragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300 hover:border-blue-400'}\n                    ${uploading ? 'opacity-50 cursor-not-allowed' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 17\n      }, this), uploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center justify-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mb-4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Processing document...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 21\n      }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"text-6xl mb-4\",\n          children: \"\\uD83D\\uDCC4\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-lg text-gray-600 mb-2\",\n          children: isDragActive ? \"Drop the file here...\" : \"Drag and drop a document here, or click to select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 25\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500\",\n          children: \"Supported formats: PDF, DOC, DOCX, TXT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 25\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 9\n  }, this);\n};\n_s(DocumentUpload, \"ilS6CM1jswXsBT8hphORGDawEYg=\", false, function () {\n  return [useDropzone];\n});\n_c = DocumentUpload;\nexport default DocumentUpload;\nvar _c;\n$RefreshReg$(_c, \"DocumentUpload\");","map":{"version":3,"names":["React","useState","useDropzone","toast","apiService","jsxDEV","_jsxDEV","Fragment","_Fragment","DocumentUpload","onUploadComplete","onError","setLoading","_s","uploading","setUploading","onDrop","acceptedFiles","length","file","validTypes","includes","type","error","result","uploadDocument","console","log","results","toastId","success","autoClose","Error","message","getRootProps","getInputProps","isDragActive","accept","multiple","disabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhishek.vats/Documents/Projects Git/Projects/docintel-ai copy 2/frontend/src/components/DocumentUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { toast } from 'react-toastify';\nimport apiService from '../services/api';\n\nconst DocumentUpload = ({ onUploadComplete, onError, setLoading }) => {\n    const [uploading, setUploading] = useState(false);\n\n    const onDrop = async (acceptedFiles) => {\n        if (acceptedFiles.length === 0) return;\n\n        const file = acceptedFiles[0];\n        \n        // Validate file type\n        const validTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'text/plain'];\n        if (!validTypes.includes(file.type)) {\n            toast.error('Please upload a valid file (PDF, DOC, DOCX, or TXT)');\n            return;\n        }\n\n        setUploading(true);\n        setLoading(true);\n\n        try {\n            const result = await apiService.uploadDocument(file);\n            console.log('Upload result:', result);\n            \n            if (result && result.results) {\n                const toastId = toast.success('Document uploaded and analyzed successfully!', { autoClose: false });\n                onUploadComplete(result.results, toastId);\n            } else {\n                throw new Error('Invalid response format from server');\n            }\n        } catch (error) {\n            console.error('Upload error:', error);\n            toast.error(error.message || 'Failed to upload document. Please try again.');\n            onError(error);\n        } finally {\n            setUploading(false);\n            setLoading(false);\n        }\n    };\n\n    const { getRootProps, getInputProps, isDragActive } = useDropzone({\n        onDrop,\n        accept: {\n            'application/pdf': ['.pdf'],\n            'application/msword': ['.doc'],\n            'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'],\n            'text/plain': ['.txt']\n        },\n        multiple: false,\n        disabled: uploading\n    });\n\n    return (\n        <div className=\"w-full max-w-2xl mx-auto p-6\">\n            <div\n                {...getRootProps()}\n                className={`border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors\n                    ${isDragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300 hover:border-blue-400'}\n                    ${uploading ? 'opacity-50 cursor-not-allowed' : ''}`}\n            >\n                <input {...getInputProps()} />\n                {uploading ? (\n                    <div className=\"flex flex-col items-center justify-center\">\n                        <div className=\"animate-spin rounded-full h-12 w-12 border-b-2 border-blue-500 mb-4\"></div>\n                        <p className=\"text-gray-600\">Processing document...</p>\n                    </div>\n                ) : (\n                    <>\n                        <div className=\"text-6xl mb-4\">ðŸ“„</div>\n                        <p className=\"text-lg text-gray-600 mb-2\">\n                            {isDragActive\n                                ? \"Drop the file here...\"\n                                : \"Drag and drop a document here, or click to select\"}\n                        </p>\n                        <p className=\"text-sm text-gray-500\">\n                            Supported formats: PDF, DOC, DOCX, TXT\n                        </p>\n                    </>\n                )}\n            </div>\n        </div>\n    );\n};\n\nexport default DocumentUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}