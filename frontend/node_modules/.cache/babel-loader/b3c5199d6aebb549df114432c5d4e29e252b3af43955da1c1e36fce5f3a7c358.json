{"ast":null,"code":"var _jsxFileName = \"/Users/abhishek.vats/Documents/Projects Git/Projects/docintel-ai/frontend/src/components/DocumentUpload.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { toast } from 'react-toastify';\nimport ApiService from '../services/api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst DocumentUpload = ({\n  onUploadComplete,\n  onError,\n  setLoading\n}) => {\n  _s();\n  const [uploading, setUploading] = useState(false);\n  const onDrop = async acceptedFiles => {\n    if (acceptedFiles.length === 0) return;\n    const file = acceptedFiles[0];\n    console.log('File selected:', file.name, 'Size:', file.size, 'Type:', file.type);\n\n    // Validate file type\n    const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'text/plain'];\n    if (!allowedTypes.includes(file.type)) {\n      console.error('Invalid file type:', file.type);\n      toast.error('Please upload a PDF, DOC, DOCX, or TXT file');\n      return;\n    }\n    setUploading(true);\n    setLoading(true);\n    try {\n      console.log('Sending file to server...');\n      const data = await ApiService.uploadDocument(file);\n      console.log('Response data:', data);\n      if (data.status === 'success' && data.results) {\n        console.log('Upload successful, results:', data.results);\n        toast.success('Document processed successfully!');\n        onUploadComplete(data.results);\n      } else {\n        console.error('Invalid response format:', data);\n        throw new Error('Invalid response format from server');\n      }\n    } catch (error) {\n      console.error('Error uploading document:', error);\n      toast.error(error.message || 'Failed to process document');\n      onError(error);\n    } finally {\n      setUploading(false);\n      setLoading(false);\n    }\n  };\n  const {\n    getRootProps,\n    getInputProps,\n    isDragActive\n  } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'application/msword': ['.doc'],\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'],\n      'text/plain': ['.txt']\n    },\n    maxFiles: 1,\n    disabled: uploading\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"w-full max-w-3xl mx-auto\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      ...getRootProps(),\n      className: `border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors\n          ${isDragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300 hover:border-blue-400'}\n          ${uploading ? 'opacity-50 cursor-not-allowed' : ''}`,\n      children: [/*#__PURE__*/_jsxDEV(\"input\", {\n        ...getInputProps()\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), uploading ? /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"flex flex-col items-center\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"mt-2 text-gray-600\",\n          children: \"Processing document...\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this) : isDragActive ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"text-blue-500\",\n        children: \"Drop the file here...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-gray-600\",\n          children: \"Drag and drop a document here, or click to select\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n          className: \"text-sm text-gray-500 mt-2\",\n          children: \"Supported formats: PDF, DOC, DOCX, TXT\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n};\n_s(DocumentUpload, \"ilS6CM1jswXsBT8hphORGDawEYg=\", false, function () {\n  return [useDropzone];\n});\n_c = DocumentUpload;\nexport default DocumentUpload;\nvar _c;\n$RefreshReg$(_c, \"DocumentUpload\");","map":{"version":3,"names":["React","useState","useDropzone","toast","ApiService","jsxDEV","_jsxDEV","DocumentUpload","onUploadComplete","onError","setLoading","_s","uploading","setUploading","onDrop","acceptedFiles","length","file","console","log","name","size","type","allowedTypes","includes","error","data","uploadDocument","status","results","success","Error","message","getRootProps","getInputProps","isDragActive","accept","maxFiles","disabled","className","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/Users/abhishek.vats/Documents/Projects Git/Projects/docintel-ai/frontend/src/components/DocumentUpload.js"],"sourcesContent":["import React, { useState } from 'react';\nimport { useDropzone } from 'react-dropzone';\nimport { toast } from 'react-toastify';\nimport ApiService from '../services/api';\n\nconst DocumentUpload = ({ onUploadComplete, onError, setLoading }) => {\n  const [uploading, setUploading] = useState(false);\n\n  const onDrop = async (acceptedFiles) => {\n    if (acceptedFiles.length === 0) return;\n\n    const file = acceptedFiles[0];\n    console.log('File selected:', file.name, 'Size:', file.size, 'Type:', file.type);\n\n    // Validate file type\n    const allowedTypes = ['application/pdf', 'application/msword', 'application/vnd.openxmlformats-officedocument.wordprocessingml.document', 'text/plain'];\n    if (!allowedTypes.includes(file.type)) {\n      console.error('Invalid file type:', file.type);\n      toast.error('Please upload a PDF, DOC, DOCX, or TXT file');\n      return;\n    }\n\n    setUploading(true);\n    setLoading(true);\n\n    try {\n      console.log('Sending file to server...');\n      const data = await ApiService.uploadDocument(file);\n      console.log('Response data:', data);\n\n      if (data.status === 'success' && data.results) {\n        console.log('Upload successful, results:', data.results);\n        toast.success('Document processed successfully!');\n        onUploadComplete(data.results);\n      } else {\n        console.error('Invalid response format:', data);\n        throw new Error('Invalid response format from server');\n      }\n    } catch (error) {\n      console.error('Error uploading document:', error);\n      toast.error(error.message || 'Failed to process document');\n      onError(error);\n    } finally {\n      setUploading(false);\n      setLoading(false);\n    }\n  };\n\n  const { getRootProps, getInputProps, isDragActive } = useDropzone({\n    onDrop,\n    accept: {\n      'application/pdf': ['.pdf'],\n      'application/msword': ['.doc'],\n      'application/vnd.openxmlformats-officedocument.wordprocessingml.document': ['.docx'],\n      'text/plain': ['.txt']\n    },\n    maxFiles: 1,\n    disabled: uploading\n  });\n\n  return (\n    <div className=\"w-full max-w-3xl mx-auto\">\n      <div\n        {...getRootProps()}\n        className={`border-2 border-dashed rounded-lg p-8 text-center cursor-pointer transition-colors\n          ${isDragActive ? 'border-blue-500 bg-blue-50' : 'border-gray-300 hover:border-blue-400'}\n          ${uploading ? 'opacity-50 cursor-not-allowed' : ''}`}\n      >\n        <input {...getInputProps()} />\n        {uploading ? (\n          <div className=\"flex flex-col items-center\">\n            <div className=\"animate-spin rounded-full h-8 w-8 border-b-2 border-blue-500\"></div>\n            <p className=\"mt-2 text-gray-600\">Processing document...</p>\n          </div>\n        ) : isDragActive ? (\n          <p className=\"text-blue-500\">Drop the file here...</p>\n        ) : (\n          <div>\n            <p className=\"text-gray-600\">Drag and drop a document here, or click to select</p>\n            <p className=\"text-sm text-gray-500 mt-2\">Supported formats: PDF, DOC, DOCX, TXT</p>\n          </div>\n        )}\n      </div>\n    </div>\n  );\n};\n\nexport default DocumentUpload; "],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}