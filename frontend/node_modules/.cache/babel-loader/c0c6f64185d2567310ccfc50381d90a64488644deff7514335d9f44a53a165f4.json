{"ast":null,"code":"import API_CONFIG, { getApiUrl } from '../config/api';\nclass ApiService {\n  static async uploadDocument(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n    const response = await fetch(getApiUrl(API_CONFIG.ENDPOINTS.DOCUMENTS.UPLOAD), {\n      method: 'POST',\n      body: formData,\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.detail || 'Failed to process document');\n    }\n    return response.json();\n  }\n  static async getCompanyConfig() {\n    const response = await fetch(getApiUrl(API_CONFIG.ENDPOINTS.CONFIG.COMPANY), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to load company configuration');\n    }\n    return response.json();\n  }\n  static async getComplianceRules() {\n    const response = await fetch(getApiUrl(API_CONFIG.ENDPOINTS.CONFIG.COMPLIANCE_RULES), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json'\n      }\n    });\n    if (!response.ok) {\n      throw new Error('Failed to load compliance rules');\n    }\n    return response.json();\n  }\n}\nexport default ApiService;","map":{"version":3,"names":["API_CONFIG","getApiUrl","ApiService","uploadDocument","file","formData","FormData","append","response","fetch","ENDPOINTS","DOCUMENTS","UPLOAD","method","body","headers","ok","error","json","Error","detail","getCompanyConfig","CONFIG","COMPANY","getComplianceRules","COMPLIANCE_RULES"],"sources":["/Users/abhishek.vats/Documents/Projects Git/Projects/docintel-ai/frontend/src/services/api.js"],"sourcesContent":["import API_CONFIG, { getApiUrl } from '../config/api';\n\nclass ApiService {\n  static async uploadDocument(file) {\n    const formData = new FormData();\n    formData.append('file', file);\n\n    const response = await fetch(getApiUrl(API_CONFIG.ENDPOINTS.DOCUMENTS.UPLOAD), {\n      method: 'POST',\n      body: formData,\n      headers: {\n        'Accept': 'application/json',\n      },\n    });\n\n    if (!response.ok) {\n      const error = await response.json();\n      throw new Error(error.detail || 'Failed to process document');\n    }\n\n    return response.json();\n  }\n\n  static async getCompanyConfig() {\n    const response = await fetch(getApiUrl(API_CONFIG.ENDPOINTS.CONFIG.COMPANY), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n      },\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to load company configuration');\n    }\n\n    return response.json();\n  }\n\n  static async getComplianceRules() {\n    const response = await fetch(getApiUrl(API_CONFIG.ENDPOINTS.CONFIG.COMPLIANCE_RULES), {\n      method: 'GET',\n      headers: {\n        'Accept': 'application/json',\n      },\n    });\n    \n    if (!response.ok) {\n      throw new Error('Failed to load compliance rules');\n    }\n\n    return response.json();\n  }\n}\n\nexport default ApiService; "],"mappings":"AAAA,OAAOA,UAAU,IAAIC,SAAS,QAAQ,eAAe;AAErD,MAAMC,UAAU,CAAC;EACf,aAAaC,cAAcA,CAACC,IAAI,EAAE;IAChC,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;IAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;IAE7B,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAACR,SAAS,CAACD,UAAU,CAACU,SAAS,CAACC,SAAS,CAACC,MAAM,CAAC,EAAE;MAC7EC,MAAM,EAAE,MAAM;MACdC,IAAI,EAAET,QAAQ;MACdU,OAAO,EAAE;QACP,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAMC,KAAK,GAAG,MAAMT,QAAQ,CAACU,IAAI,CAAC,CAAC;MACnC,MAAM,IAAIC,KAAK,CAACF,KAAK,CAACG,MAAM,IAAI,4BAA4B,CAAC;IAC/D;IAEA,OAAOZ,QAAQ,CAACU,IAAI,CAAC,CAAC;EACxB;EAEA,aAAaG,gBAAgBA,CAAA,EAAG;IAC9B,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAACR,SAAS,CAACD,UAAU,CAACU,SAAS,CAACY,MAAM,CAACC,OAAO,CAAC,EAAE;MAC3EV,MAAM,EAAE,KAAK;MACbE,OAAO,EAAE;QACP,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIG,KAAK,CAAC,sCAAsC,CAAC;IACzD;IAEA,OAAOX,QAAQ,CAACU,IAAI,CAAC,CAAC;EACxB;EAEA,aAAaM,kBAAkBA,CAAA,EAAG;IAChC,MAAMhB,QAAQ,GAAG,MAAMC,KAAK,CAACR,SAAS,CAACD,UAAU,CAACU,SAAS,CAACY,MAAM,CAACG,gBAAgB,CAAC,EAAE;MACpFZ,MAAM,EAAE,KAAK;MACbE,OAAO,EAAE;QACP,QAAQ,EAAE;MACZ;IACF,CAAC,CAAC;IAEF,IAAI,CAACP,QAAQ,CAACQ,EAAE,EAAE;MAChB,MAAM,IAAIG,KAAK,CAAC,iCAAiC,CAAC;IACpD;IAEA,OAAOX,QAAQ,CAACU,IAAI,CAAC,CAAC;EACxB;AACF;AAEA,eAAehB,UAAU","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}