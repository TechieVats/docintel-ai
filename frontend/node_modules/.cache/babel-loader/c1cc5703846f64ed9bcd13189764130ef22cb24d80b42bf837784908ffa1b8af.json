{"ast":null,"code":"import axios from 'axios';\nimport { API_BASE_URL } from '../config/api';\nclass ApiService {\n  async uploadDocument(file) {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n      const response = await fetch(`${API_BASE_URL}/documents/upload`, {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error uploading document:', error);\n      throw error;\n    }\n  }\n  async getCompanyConfig() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/config/company`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching company config:', error);\n      throw error;\n    }\n  }\n  async getComplianceRules() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/config/rules`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching compliance rules:', error);\n      throw error;\n    }\n  }\n}\nexport default new ApiService();","map":{"version":3,"names":["axios","API_BASE_URL","ApiService","uploadDocument","file","formData","FormData","append","response","fetch","method","body","headers","ok","Error","status","data","json","error","console","getCompanyConfig","getComplianceRules"],"sources":["/Users/abhishek.vats/Documents/Projects Git/Projects/docintel-ai/frontend/src/services/api.js"],"sourcesContent":["import axios from 'axios';\nimport { API_BASE_URL } from '../config/api';\n\nclass ApiService {\n  async uploadDocument(file) {\n    try {\n      const formData = new FormData();\n      formData.append('file', file);\n\n      const response = await fetch(`${API_BASE_URL}/documents/upload`, {\n        method: 'POST',\n        body: formData,\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      const data = await response.json();\n      return data;\n    } catch (error) {\n      console.error('Error uploading document:', error);\n      throw error;\n    }\n  }\n\n  async getCompanyConfig() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/config/company`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching company config:', error);\n      throw error;\n    }\n  }\n\n  async getComplianceRules() {\n    try {\n      const response = await fetch(`${API_BASE_URL}/config/rules`, {\n        method: 'GET',\n        headers: {\n          'Accept': 'application/json'\n        }\n      });\n\n      if (!response.ok) {\n        throw new Error(`HTTP error! status: ${response.status}`);\n      }\n\n      return await response.json();\n    } catch (error) {\n      console.error('Error fetching compliance rules:', error);\n      throw error;\n    }\n  }\n}\n\nexport default new ApiService(); "],"mappings":"AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,SAASC,YAAY,QAAQ,eAAe;AAE5C,MAAMC,UAAU,CAAC;EACf,MAAMC,cAAcA,CAACC,IAAI,EAAE;IACzB,IAAI;MACF,MAAMC,QAAQ,GAAG,IAAIC,QAAQ,CAAC,CAAC;MAC/BD,QAAQ,CAACE,MAAM,CAAC,MAAM,EAAEH,IAAI,CAAC;MAE7B,MAAMI,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,mBAAmB,EAAE;QAC/DS,MAAM,EAAE,MAAM;QACdC,IAAI,EAAEN,QAAQ;QACdO,OAAO,EAAE;UACP,QAAQ,EAAE;QACZ;MACF,CAAC,CAAC;MAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBN,QAAQ,CAACO,MAAM,EAAE,CAAC;MAC3D;MAEA,MAAMC,IAAI,GAAG,MAAMR,QAAQ,CAACS,IAAI,CAAC,CAAC;MAClC,OAAOD,IAAI;IACb,CAAC,CAAC,OAAOE,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,2BAA2B,EAAEA,KAAK,CAAC;MACjD,MAAMA,KAAK;IACb;EACF;EAEA,MAAME,gBAAgBA,CAAA,EAAG;IACvB,IAAI;MACF,MAAMZ,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,iBAAiB,EAAE;QAC7DS,MAAM,EAAE,KAAK;QACbE,OAAO,EAAE;UACP,QAAQ,EAAE;QACZ;MACF,CAAC,CAAC;MAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBN,QAAQ,CAACO,MAAM,EAAE,CAAC;MAC3D;MAEA,OAAO,MAAMP,QAAQ,CAACS,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,gCAAgC,EAAEA,KAAK,CAAC;MACtD,MAAMA,KAAK;IACb;EACF;EAEA,MAAMG,kBAAkBA,CAAA,EAAG;IACzB,IAAI;MACF,MAAMb,QAAQ,GAAG,MAAMC,KAAK,CAAC,GAAGR,YAAY,eAAe,EAAE;QAC3DS,MAAM,EAAE,KAAK;QACbE,OAAO,EAAE;UACP,QAAQ,EAAE;QACZ;MACF,CAAC,CAAC;MAEF,IAAI,CAACJ,QAAQ,CAACK,EAAE,EAAE;QAChB,MAAM,IAAIC,KAAK,CAAC,uBAAuBN,QAAQ,CAACO,MAAM,EAAE,CAAC;MAC3D;MAEA,OAAO,MAAMP,QAAQ,CAACS,IAAI,CAAC,CAAC;IAC9B,CAAC,CAAC,OAAOC,KAAK,EAAE;MACdC,OAAO,CAACD,KAAK,CAAC,kCAAkC,EAAEA,KAAK,CAAC;MACxD,MAAMA,KAAK;IACb;EACF;AACF;AAEA,eAAe,IAAIhB,UAAU,CAAC,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}